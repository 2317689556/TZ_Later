<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.dao.StockupMapper">
    <select id="findStockup" resultType="pickingList">
        SELECT *
        FROM picking_list
        <where>
            <if test="date_1 != null and date_1 != ''">
                signDate>=#{date_1}
            </if>
            <if test="date_2 != null and date_2 != ''">
                AND signDate&lt;=#{date_2}
            </if>
        </where>
    </select>

    <select id="ParticularSelect" resultType="Integer">
        SELECT sum(money) as money1 FROM stock_out_details WHERE stockout_id=#{id}
    </select>

    <resultMap id="StockOutaaa" type="StockOut" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="money1" column="id" ofType="Integer" select="spring.dao.StockupMapper.ParticularSelect"/>
    </resultMap>

    <!--入库单__全查-->
    <select id="StockOutFindAll" resultMap="StockOutaaa">
        SELECT *
        FROM stock_out
        <where>
            <if test="date_1 != null and date_1 != ''">
                signDate>=#{date_1}
            </if>
            <if test="date_2 != null and date_2 != ''">
                AND signDate&lt;=#{date_2}
            </if>
        </where>
    </select>

    <!--入库单__详情-->
    <select id="StockOutFindAllById" resultType="StockOutDetails">
      select *
      from
       stock_out a ,
       stock_out_details b
        where
         a.id=b.stockout_id
          and
           a.id=#{id}
    </select>

    <!--填单__采购申请__添加-->
    <insert id="StockupAdd" parameterType="StockOutDetailss">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        INSERT INTO stock_out (id,number,manufacturer,proposer,signState,signDate,dateOut,difference,update_time)
        VALUE (null,#{number},#{manufacturer},#{proposer},1,#{signDate},#{dateOut},0,#{updateTime})
    </insert>

    <!--填单__采购申请__详情__添加-->
    <insert id="StockupAdd1">
        INSERT INTO stock_out_details (id,name,model,specification,unit,count,unitPrice,money,stockout_id)
        VALUE
        <foreach collection="li" item="l" separator=",">
            (null,#{l.name},#{l.model},#{l.specification},#{l.unit},#{l.count},#{l.unitPrice},#{l.money},#{id})
        </foreach>
    </insert>

    <!--入库单__签批-->
    <update id="updateQianpi">
        update stock_out set signState=2,dateOut=now() where id=#{id}
    </update>

    <!--入库单__驳回-->
    <update id="updateBohui">
        update stock_out set signState=3 where id=#{id}
    </update>

    <!--改变状态-->
    <update id="updateState">
        update stock_out set signState=#{id} where id=#{i}
    </update>

    <!--日志-->
    <insert id="log">
        INSERT INTO log VALUE (null,(SELECT count(b.id) FROM stock_out a LEFT JOIN stock_out_details b ON a.id=b.stockout_id WHERE a.id=#{id}),"入库件数",now()),
        (null,1,"入库单",now()),
        (null,(SELECT sum(b.money) FROM stock_out a LEFT JOIN stock_out_details b ON a.id=b.stockout_id WHERE a.id=#{id}),"入库金额",now())
    </insert>

    <select id="cha" resultType="Commodity">
        SELECT * FROM stock WHERE name=(SELECT name FROM stock_out_details WHERE id=#{i})
    </select>

    <!--库存详情-->
    <select id="StockupUpdata" resultType="Stock">
        SELECT * FROM stock a LEFT JOIN commodity c2 on a.stock_id = c2.id WHERE a.id=#{id}
    </select>

    <!--查询后修改的方法-->
    <update id="kucun">
        UPDATE stock SET count=(count+(SELECT count FROM stock_out_details WHERE id=#{id})) WHERE name=(SELECT name FROM stock_out_details WHERE id=#{id})
    </update>

    <!--查询后添加的方法-->
    <insert id="kucun1" parameterType="User">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        INSERT INTO stock (name,count,model,specification,unit,unitPrice,money,difference,update_time) SELECT name,count,model,specification,unit,unitPrice,money,difference,update_time FROM stock_out_details a LEFT JOIN stock_out b ON a.stockout_id = b.id WHERE b.id=#{gradeId}
    </insert>

</mapper>
