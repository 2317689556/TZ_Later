<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.dao.LibraryMapper">

    <!--库存展示-->
    <select id="showInventory" resultType="Stock">
        SELECT *
        FROM stock
        <where>
            <if test="date1 != null and date1 != ''">
                InboundDate>=#{date1}
            </if>
            <if test="date2 != null and date2 != ''">
                AND InboundDate&lt;=#{date2}
            </if>
        </where>
    </select>

    <!--出库单全查-->
    <select id="PurchaseRequestfindAll" resultType="PurchaseRequest">
        select *
        from purchase_request
        <where>
            <if test="date1!=null and date1!=''">
                applyDate>=#{date1}
            </if>
            <if test="date2!=null and date2!=''">
                and applyDate&lt;=#{date2}
            </if>

        </where>
    </select>

    <!--出库单__详情-->
    <select id="PurchaseRequestDetailsFindAllById" resultType="PurchaseRequestDetails">
        select *
        from purchase_request a,
        purchase_request_details b
         where
          a.id=b.stockout_id
           and
            a.id=#{id}
    </select>

    <!--出库单__签批-->
    <update id="updateQianPi">
        update purchase_request set signState=1 where id=#{id}
    </update>

    <!--出库单__出库-->
    <update id="UpdataState">
        update purchase_request set signState=3 where id=#{id}
    </update>

    <!--出库单__驳回-->
    <update id="updateBoHui">
        update purchase_request set signState=2 where id=#{id}
    </update>

    <update id="LibraryAdd" parameterType="PurchaseRequestDetailss">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        INSERT INTO purchase_request (id,proposer,number,department,applyDate,signState,manufacturers)
        VALUE (null,#{proposer},#{number},#{department},#{applyDate},0,#{manufacturers})
    </update>

    <update id="LossAdd" parameterType="Abnormal">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        INSERT INTO abnormal (id,number,customer,date,cause,signState)
        VALUE (null,#{number},#{customer},now(),#{cause},0)
    </update>

    <insert id="LibraryAdd1">
        INSERT INTO purchase_request_details (id,name,model,specification,unit,count,unitPrice,money,stockout_id,order_on,salesman)
        VALUE
        <foreach collection="li" item="l" separator=",">
            (null,#{l.name},#{l.model},#{l.specification},#{l.unit},#{l.count},#{l.unitPrice},#{l.money},#{pu.id},#{pu.orderOn},#{pu.salesman})
        </foreach>
    </insert>

    <insert id="LossAdd1">
        INSERT INTO abnormal_details (id,name,model,unit,coding,stockout_id)
        VALUE
        <foreach collection="li" item="l" separator=",">
            (null,#{l.name},#{l.model},#{l.unit},#{l.coding},#{id})
        </foreach>
    </insert>

    <!--出库单出库后执行的添加日志-->
    <insert id="log">
        INSERT INTO log VALUE (null,(SELECT count(b.id) FROM purchase_request a LEFT JOIN purchase_request_details b ON a.id=b.stockout_id WHERE a.id=#{id}),"出库件数",now()),
        (null,(SELECT sum(b.money) FROM purchase_request a LEFT JOIN purchase_request_details b ON a.id=b.stockout_id WHERE a.id=#{id}),"出库金额",now()),
        (null,1,"出库单",now())
    </insert>

    <select id="showStock" resultType="Stock">
        SELECT * FROM stock a LEFT JOIN commodity b ON a.id=b.stock_id
        <if test="id !=null and id!=''">
            WHERE a.id=#{id}
        </if>
    </select>

    <update id="LibraryAdd2" parameterType="PurchaseRequestDetails">
        UPDATE stock SET count=(count-#{count}) WHERE id=#{id}
    </update>

    <delete id="LibraryAdd3">
        DELETE FROM  stock WHERE count =0
    </delete>
</mapper>
